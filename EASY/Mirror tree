

//https://practice.geeksforgeeks.org/problems/mirror-tree/1#
class Solution {
  public:
    // Function to convert a binary tree into its mirror tree.
    
    
    Node*  fun(Node* node){
        if(node)
        {
            fun(node->left);
             fun(node->right);
            Node*swap=node->left;
            node->left=node->right;
            node->right=swap;
           // cout<<node->data<<"  ";
           
        }
        return node;
   
    }
   
    void mirror(Node* node) {
        // code here
      Node* root=fun(node);  
     // print(node);
       
    }
};
