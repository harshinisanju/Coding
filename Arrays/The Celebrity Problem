//https://practice.geeksforgeeks.org/problems/the-celebrity-problem/1/?company[]=United%20Health%20Group&company[]=United%20Health%20Group&page=1&query=company[]United%20Health%20Grouppage1company[]United%20Health%20Group#
//Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& a, int n) 
    {
        // code here 
      int val=-1;
        for(int i=0;i<n;i++)
        {int j;
        int flag;
            for(j=0;j<n;j++)
            {
                if(a[i][j]==0)
                continue;
                else
                   break;
            }
            if(j==n)
            {
               val=i; 
              // cout<<"hai"<< i <<" ";
            }
        }
        
        
        for(int i=0;i<n;i++)
        {
                if(i!=val)
                {
                    
                    if(a[i][val]!=1)
                    return -1;
                    
                }else
                continue;
            
        }
     //   cout<<val;
     
        return val;
        
        
=============================================================================================================================================================================        
        
        Site solution:
        int findCelebrity(int n)
{
    //the graph needs not be constructed
    //as the edges can be found by
    //using knows function
    
    //degree array;
    int indegree[n]={0},outdegree[n]={0};
    
    //query for all edges
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<n; j++)
        {
            int x = knows(i,j);
            
            //set the degrees
            outdegree[i]+=x;
            indegree[j]+=x;
        }
    }
    
    //find a person with indegree n-1
    //and out degree 0
    for(int i=0; i<n; i++)
    if(indegree[i] == n-1 && outdegree[i] == 0)
        return i;
    
    return -1;
}
        
        
